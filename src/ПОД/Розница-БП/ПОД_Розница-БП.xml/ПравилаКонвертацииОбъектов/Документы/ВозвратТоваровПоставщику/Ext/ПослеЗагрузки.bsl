
мСписокВидовДоговоров = Новый СписокЗначений;
мСписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);

ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Объект, мСписокВидовДоговоров);

Если ЗначениеЗАполнено(Объект.ДоговорКонтрагента) Тогда
	Объект.ВалютаДокумента    = Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов, Объект.Дата);
	Объект.КурсВзаиморасчетов      = СтруктураКурсаДокумента.Курс;
	Объект.КратностьВзаиморасчетов = СтруктураКурсаДокумента.Кратность;
КонецЕсли;	

Объект.УчитыватьНДС = ложь;

ЗаполнениеДокументовПоУмолчанию.ЗаполнитьСчетаПоУмолчанию(Объект);
Объект.ЗаполнитьСчетаУчетаРасчетов();
Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, "Товары", Истина);

Если ОбщегоНазначения.ЕстьРеквизитДокумента("ПодразделениеОрганизации", Объект.Метаданные()) Тогда
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		Склад = Объект.Склад;
		Подразделение =  Неопределено;
		Выполнить (Алгоритмы.ПолучитьПодразделение);
		Объект.ПодразделениеОрганизации = Подразделение;
	Иначе
		Объект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
КонецЕсли;

Выполнить(Алгоритмы.ОбработатьЗаписьДокументаПослеЗагрузки);
Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
//Для каждого СтрокаТЧ Из Объект.Товары Цикл
//	СтрокаТЧ.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
//КонецЦикла;

Объект.Ответственный = Справочники.Пользователи.НайтиПоНаименованию("Пользователь в рознице");
Выполнить(Алгоритмы.ПослеЗагрузкиДокумента_УстановитьССылку);
