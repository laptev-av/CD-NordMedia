Если ОбщегоНазначения.ЕстьРеквизитДокумента("ПодразделениеОрганизации", Объект.Метаданные()) Тогда
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		Склад = Объект.Склад;
		Подразделение =  Неопределено;
		Выполнить (Алгоритмы.ПолучитьПодразделение);
		Объект.ПодразделениеОрганизации = Подразделение;
	Иначе
		Объект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
КонецЕсли;

Объект.ВалютаДокумента  = Параметры.ВалютаРегламентированногоУчета;
СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
Объект.КурсДокумента      = СтруктураКурсаДокумента.Курс;
Объект.КратностьДокумента = СтруктураКурсаДокумента.Кратность;
Объект.Ответственный = Справочники.Пользователи.НайтиПоНаименованию("Пользователь в рознице");
Объект.УчитыватьНДС = ложь;

Выполнить(Алгоритмы.ОбработатьЗаписьДокументаПослеЗагрузки);
ЗаполнениеДокументовПоУмолчанию.ЗаполнитьСчетаПоУмолчанию(Объект);

Объект.СуммаДокумента = УчетНДС.ПолучитьСуммуДокументаСНДС(Объект, "Товары") + УчетНДС.ПолучитьСуммуДокументаСНДС(Объект, "АгентскиеУслуги");
Если Объект.Оплата.Количество() > 0 Тогда
	Для Каждого ТекСтрока Из Объект.Оплата Цикл
		ВидОплаты = ТекСтрока.ВидОплаты;   			
		Если ВидОплаты.ТипОплаты = Перечисления.ТипыОплат.ПлатежнаяКарта Тогда			
			Если ЗначениеЗаполнено(ВидОплаты.Контрагент) Тогда
				ТекСтрока.Контрагент         = ВидОплаты.Контрагент;
				ТекСтрока.ДоговорКонтрагента = ВидОплаты.ДоговорКонтрагента;
				ТекСтрока.СчетУчетаРасчетов  = ВидОплаты.СчетУчетаРасчетов;
			КонецЕсли;
		КонецЕсли;			
	КонецЦикла;			
КонецЕсли; 	

Субконто = ПараметрыОбъекта["Субконто"];
Если Объект.Товары.Количество() > 0 Тогда
	Для Каждого ТекСтрока Из Объект.Товары Цикл
		ТекСтрока.Субконто = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Субконто);
    КонецЦикла;
КонецЕсли;


Объект.СЧетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации;
Выполнить(Алгоритмы.ПослеЗагрузкиДокумента_УстановитьССылку);
